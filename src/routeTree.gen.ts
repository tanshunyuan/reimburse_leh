/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthedImport } from './routes/_authed'
import { Route as AuthedIndexImport } from './routes/_authed/index'
import { Route as AuthedReportIndexImport } from './routes/_authed/report/index'
import { Route as AuthedExpensesCreateImport } from './routes/_authed/expenses/create'
import { Route as AuthedExpensesExpenseIdIndexImport } from './routes/_authed/expenses/$expenseId/index'

// Create/Update Routes

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const AuthedIndexRoute = AuthedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedReportIndexRoute = AuthedReportIndexImport.update({
  path: '/report/',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedExpensesCreateRoute = AuthedExpensesCreateImport.update({
  path: '/expenses/create',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedExpensesExpenseIdIndexRoute =
  AuthedExpensesExpenseIdIndexImport.update({
    path: '/expenses/$expenseId/',
    getParentRoute: () => AuthedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/_authed/': {
      id: '/_authed/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthedIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/expenses/create': {
      id: '/_authed/expenses/create'
      path: '/expenses/create'
      fullPath: '/expenses/create'
      preLoaderRoute: typeof AuthedExpensesCreateImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/report/': {
      id: '/_authed/report/'
      path: '/report'
      fullPath: '/report'
      preLoaderRoute: typeof AuthedReportIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/expenses/$expenseId/': {
      id: '/_authed/expenses/$expenseId/'
      path: '/expenses/$expenseId'
      fullPath: '/expenses/$expenseId'
      preLoaderRoute: typeof AuthedExpensesExpenseIdIndexImport
      parentRoute: typeof AuthedImport
    }
  }
}

// Create and export the route tree

interface AuthedRouteChildren {
  AuthedIndexRoute: typeof AuthedIndexRoute
  AuthedExpensesCreateRoute: typeof AuthedExpensesCreateRoute
  AuthedReportIndexRoute: typeof AuthedReportIndexRoute
  AuthedExpensesExpenseIdIndexRoute: typeof AuthedExpensesExpenseIdIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedIndexRoute: AuthedIndexRoute,
  AuthedExpensesCreateRoute: AuthedExpensesCreateRoute,
  AuthedReportIndexRoute: AuthedReportIndexRoute,
  AuthedExpensesExpenseIdIndexRoute: AuthedExpensesExpenseIdIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthedRouteWithChildren
  '/': typeof AuthedIndexRoute
  '/expenses/create': typeof AuthedExpensesCreateRoute
  '/report': typeof AuthedReportIndexRoute
  '/expenses/$expenseId': typeof AuthedExpensesExpenseIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof AuthedIndexRoute
  '/expenses/create': typeof AuthedExpensesCreateRoute
  '/report': typeof AuthedReportIndexRoute
  '/expenses/$expenseId': typeof AuthedExpensesExpenseIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/': typeof AuthedIndexRoute
  '/_authed/expenses/create': typeof AuthedExpensesCreateRoute
  '/_authed/report/': typeof AuthedReportIndexRoute
  '/_authed/expenses/$expenseId/': typeof AuthedExpensesExpenseIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/expenses/create' | '/report' | '/expenses/$expenseId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/expenses/create' | '/report' | '/expenses/$expenseId'
  id:
    | '__root__'
    | '/_authed'
    | '/_authed/'
    | '/_authed/expenses/create'
    | '/_authed/report/'
    | '/_authed/expenses/$expenseId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthedRoute: typeof AuthedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthedRoute: AuthedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authed"
      ]
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/",
        "/_authed/expenses/create",
        "/_authed/report/",
        "/_authed/expenses/$expenseId/"
      ]
    },
    "/_authed/": {
      "filePath": "_authed/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/expenses/create": {
      "filePath": "_authed/expenses/create.tsx",
      "parent": "/_authed"
    },
    "/_authed/report/": {
      "filePath": "_authed/report/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/expenses/$expenseId/": {
      "filePath": "_authed/expenses/$expenseId/index.tsx",
      "parent": "/_authed"
    }
  }
}
ROUTE_MANIFEST_END */
